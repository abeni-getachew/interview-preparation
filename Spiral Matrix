/**
 * @param {number[][]} matrix
 * @return {number[]}
 */
function spiralOrder(matrix) {
    const spiralOrder = [];

    for (let l = 0, t = 0, r = matrix[0].length - 1, b = matrix.length - 1
         ; l <= r && t <= b
         ; ++l, ++t, --r, --b)
    {
        for (let i = l; i <= r; ++i) // top boundary
            spiralOrder.push(matrix[t][i]);

        if (t + 1 > b) continue;
        for (let i = t + 1; i <= b; ++i) // right boundary
            spiralOrder.push(matrix[i][r]);

        if (r - 1 < l) continue;
        for (let i = r - 1; i >= l; --i) // bottom boundary
            spiralOrder.push(matrix[b][i]);

        for (let i = b - 1; i > t; --i) // left boundary
            spiralOrder.push(matrix[i][l]);
    }

    return spiralOrder;
}
