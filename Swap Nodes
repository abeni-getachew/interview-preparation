/**
 * Definition for singly-linked list.
 * function ListNode(val, next) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.next = (next===undefined ? null : next)
 * }
 */
/**
 * @param {ListNode} head
 * @return {ListNode}
 */
var swapPairs = function(head) {
    if (!head || !head.next) {
        return head;
    }
    let slow = head;
    let fast = head.next;
    while (slow && fast) {
        let first = slow.val;
        let second = fast.val;
        slow.val = second;
        fast.val = first;
        slow = slow?.next?.next;
        fast = fast?.next?.next;
    }
    return head;
};
