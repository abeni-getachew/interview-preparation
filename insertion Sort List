/**
 * Definition for singly-linked list.
 * function ListNode(val, next) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.next = (next===undefined ? null : next)
 * }
 */
/**
 * @param {ListNode} head
 * @return {ListNode}
 */
var insertionSortList = function(head) {
    let dummyHead = new ListNode(-5001, head);
    let front = head.next;
    let prev = head;
    
    while(front){
        if(front.val < prev.val){
            let preInsert = dummyHead;
            while(preInsert.next.val <= front.val ){
                preInsert = preInsert.next;
            }
            prev.next = front.next;
            let storePreInsertNextNode = preInsert.next
            preInsert.next = front;
            front.next = storePreInsertNextNode;
            front = prev.next;
        }else {
            prev = prev.next;
            front = front.next
        }
    }
    return dummyHead.next 
};
